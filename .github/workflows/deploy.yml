name: Deploy

on:
  push:
    branches:
      - master 

permissions:
  packages: write

jobs:
  commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v4
      - name: Get commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse HEAD)"

  build:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2
      - name: Install Bun
        run: bun install
      - name: Compile project
        run: bun run build

  build-and-push-image:
    needs:
      - build
      - commit-hash
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/nadmax/website:${{ needs.commit-hash.outputs.commit_hash }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
      - commit-hash
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create env file
      run: |
        echo 'GIT_COMMIT_HASH="${{ github.sha }}"' >> .env
    - name: Setup Docker Secret
      uses: appleboy/ssh-action@v1.2.1
      with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_PORT }}
          script: echo "${{ secrets.TOKEN }}" | docker secret create TOKEN - || echo "Secret already exists"
    - name: Pull Traefik image
      run: docker pull traefik:v3.3.3
    - name: Docker Stack Deploy
      uses: cssnr/stack-deploy-action@v1
      with:
        name: 'website'
        file: 'docker-stack.yaml'
        host: ${{ secrets.REMOTE_HOST }}
        port: ${{ secrets.REMOTE_PORT }}
        user: ${{ secrets.REMOTE_USER }}
        ssh_key: ${{ secrets.REMOTE_SSH_PRIVATE_KEY }}
        env_file: './.env'
        registry_auth: true
        registry_host: "ghcr.io"
        registry_user: ${{ github.actor }}
        registry_pass: ${{ secrets.TOKEN }}