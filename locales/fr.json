{
    "index": {
        "about": "À propos",
        "title": "Qui suis-je?",
        "presentation": "<p>Je suis Maximilien Nadji, Administrateur Système Linux freelance spécialisé dans la culture DevOps.<br>À travers mes articles, je partage mon expertise sur le freelancing, Linux et les pratiques DevOps.</p>",
        "services": "<ul class=\"services-list\"><li>Créer, configurer et maintenir les comptes utilisateurs, leurs groupes associés, les ressources utilisateurs, les permissions utilisateurs</li><li>Planifier des cronjobs pour exécuter des commandes</li><li>Créer, configurer et maintenir les partitions du disque, les volumes logiques (LVM), le swap, les systèmes de fichiers, l'automontage des systèmes de fichiers</li><li>Récupération en cas de défaillance du matériel, du système d'exploitation ou du système de fichiers</li><li>Configurer un pare-feu de filtrage des paquets, le réseau IPv4 et IPv6, la redirection des ports, le NAT, le routage statique et dynamique, SSH</li><li>Auditer un système Linux pour évaluer sa sécurité, ses performances et sa conformité</li><li>Implementer des proxy inverses et des load balancers (Nginx, Traefik)</li><li>Déployer, configurer et maintenir les installations logiciels, les mises à jour et les services système</li><li>Créer, configurer et maintenir des conteneurs (Docker, Podman) ainsi que des orchestrateurs de conteneurs (Kubernetes)</li><li>Automatiser le déploiement des applications à l'aide d'outils d'intégration et déploiement continus</li><li>Surveiller en temps réel les performances d'un système Linux (Prometheus, Grafana)</li></ul>",
        "contact": "<h2>Intéressé(e) par un échange sur vos besoins?</h2>Prenez <a href=\"https://calendly.com/maximiliennadji/30min\"> rendez-vous directement <\/a> ou <a href=\"https://www.linkedin.com/in/maximilien-nadji/\"> contactez-moi sur LinkedIn <\/a> pour échanger."
    },
    "about": {
        "about": "À propos",
        "title": "En savoir plus sur qui suis-je?",
        "content": "<p>Mes premiers pas dans l'informatique étaient au collège où j'apprenais les bases de la programmation web.<br>C'était devenu un loisir, où je continuais à consolider mes bases en passant par la création de site statique, vers la création de site dynamique.</p><p>J'ai commencé à utiliser Linux en rejoignant Epitech. Le premier système Linux que j'avais installé était Fedora 31.<br>J'avais appris avec à programmer en C, en C++, en Python, et bien sûr à créer des scripts Bash.</p><p>J'ai commencé à me spécialiser dans l'administration système Linux lors de mon précédent travail où j'étais consultant DevOps.<br>J'avais eu l'opportunité d'effectuer une formation sur site, couvrant les bases ainsi que des notions avancées, et je me sentais dans mon élément.<br>Suite à cette formation, afin de confirmer mes compétences en administration système Linux, j'avais décidé de passer la certification <a href=\"https://training.linuxfoundation.org/certification/linux-foundation-certified-sysadmin-lfcs/\"> LFCS <\/a> que j'ai obtenu avec <a href=\"https://ti-user-certificates.s3.amazonaws.com/e0df7fbf-a057-42af-8a1f-590912be5460/53be41b8-832e-4e79-a468-64e10b056c27-maximilien-nadji-d2b2531b-484a-44d6-87c5-4fcdd2eddc79-certificate.pdf\"> succès <\/a>.</p><p>Je consacre mon temps libre à l'apprentissage continu, afin de consolider mes compétences en administration système Linux et de gagner en maîtrise.</p>"
    },
    "blog_index": {
        "about": "À propos",
        "brr": "Sauvegarde, Restauration et Récupération sur Linux",
        "usb": "Comment Créer une Clé USB Bootable sur Linux?",
        "linux": "Qu'est-ce que Linux?",
        "freelance": "Pourquoi le freelance?"
    },
    "linux_article": {
        "about": "À propos",
        "title": "Qu'est-ce que Linux?",
        "content": "<p>Linux n'est pas un système d'exploitation mais un noyau, un ensemble de logiciels formant la couche principale entre le système d'exploitation et la machine.<br>Le noyau va être le responsable des tâches suivantes: </p><ul class= \"disc-list\"><li> La gestion de la mémoire de la machine </li> <li> La gestion des périphériques (claviers, souris, écrans, disques durs) </li> <li> La gestion des processus correspondant aux commandes en cours d'exécution sur le système </li> <li> Et bien plus encore! </li></ul> <img class=\"schema\" src=\"../../static/images/noyau.svg\"><h2>Mais donc, qu'est-ce qu'un système Linux?</h2><p>Un système Linux (appelé également une distribution Linux) est un système d'exploitation basé sur le noyau Linux mais possédant des composants supplémentaires: </p><ul class=\"disc-list\"><li> Un gestionnaire de paquets (APT, DNF) afin d'installer, mettre à jour ou supprimer des logiciels </li> <li> Un environnement graphique (GNOME, KDE) </li> <li> Un shell de commande avec un terminal (Bash, Zsh) </li> <li> Et plus encore ! </li></ul> <br> <img class=\"schema\" src=\"../../static/images/systeme-linux.svg\"><h2>Conclusion</h2><p>La principale différence est que Linux est uniquement le noyau, tandis qu'un système Linux inclut tout ce qui est nécessaire pour un système d'exploitation complet.<br>Un système Linux est ce avec quoi les utilisateurs interagissent généralement, alors que Linux seul ne peut pas être utilisé directement par les utilisateurs sans logiciels supplémentaires.</p>"
    },
    "usb_article": {
        "about": "À propos",
        "title": "Comment Créer une Clé USB Bootable sur Linux?",
        "content": "<p>Une clé USB bootable est un un périphérique USB contenant un système d'exploitation (OS) ou un utilitaire à partir duquel vous pouvez démarrer votre ordinateur.<br>Elle peut être utilisée pour installer un OS, exécuter des outils de récupération ou essayer une distribution Linux sans l'installer sur votre ordinateur.<br><br>Une clé USB Live est un type de clé USB bootable où le système d'exploitation s'exécute directement depuis la clé USB sans être installé sur le disque dur de l'ordinateur.<br><br>Dans cet article, vous allez découvrir trois méthodes différentes pour créer une clé USB bootable sous Linux.<br>Chaque méthode a ses propres avantages et cas d'utilisation, alors lisez la suite pour trouver l'approche qui vous convient le mieux !</p><br><h3>Méthode 1 : <code>dd</code> (Méthode en ligne de commande)</h3><p><code>dd</code> est un outil en ligne de commande puissant et intégré, disponible sur la plupart des distributions Linux.<br>Il permet de créer une clé USB bootable en copiant directement le fichier ISO d’un système d’exploitation sur la clé USB.<br>Bien qu’il soit rapide et efficace, il faut l’utiliser avec précaution, car la commande dd peut facilement écraser des données si le mauvais périphérique est sélectionné.</p><h4>Étapes:</h4><ul class=\"numbered-list\"><li><b>Identifiez votre clé USB:</b> Exécutez la commande suivante pour lister vos périphériques: <pre><code><span>$ lsblk</span></code></pre></li><li><b>Démontez la clé USB (si nécessaire):</b><pre><code><span>$ sudo umount /dev/sdX1 # Remplacez /dev/sdX1 par la partition correspondante à votre clé USB </span></code></pre></li><li><b>Exécutez la commande <code>dd</code>:</b> Remplacez <code>/path/to/your.iso</code> par le chemin de votre fichier ISO et <code>/dev/sdX</code> par le chemin correspondant à votre clé USB: <pre><code><span>$ sudo dd if=/path/to/your.iso of=/dev/sdX bs=4M status=progress oflag=sync</span></code></pre></li><li><b>Éjectez votre clé USB:</b> <pre><code><span>$ sudo eject /dev/sdX</span></code></pre></li></ul><h4>Avantages:</h4><ul class=\"disc-list\"><li>Aucun logiciel supplémentaire requis.</li><li>Flexible et rapide.</li></ul><h4>Inconvénients</h4><ul class=\"disc-list\"><li>Risque d'écraser des données si le mauvais périphérique est sélectionné.</li><li>Uniquement en ligne de commande, pas d'interface graphique.</li></ul><br><h3>Méthode 2 : balenaEtcher (Interface Graphique) </h3><p><a href=\"https://etcher.balena.io/\">balenaEtcher</a> est un outil populaire et facile à utiliser avec une interface graphique.<br>Il est parfait pour les débutants ou pour ceux qui préfèrent ne pas utiliser le terminal.<br>balenaEtcher simplifie le processus de création d'une clé USB bootable et garantit la sécurité du processus en vérifiant l'image.</p><h4>Étapes:</h4><ul class=\"numbered-list\"><li><b>Téléchargez et installez balenaEtcher:</b> Allez sur le <a href=\"https://etcher.balena.io/\">site de balenaEtcher</a> et téléchargez la version appropriée pour votre système Linux.</li><li><b>Lancez balenaEtcher:</b> Ouvrez l'application après l'installation.</li><li><b>Sélectionnez votre fichier ISO:</b> Cliquez sur le boutton \"Flash from file\" and choose your ISO file.</li><li><b>Sélectionnez votre périphérique USB:</b> Assurez-vous que le bon périphérique USB soit sélectionné.</li><li><b>Cliquez sur \"Flash!\":</b> balenaEtcher va maintenant créer une clé USB bootable.</li></ul><h4>Avantages:</h4><ul class=\"disc-list\"><li>Facile à utiliser et interface intuitive.</li><li>Multi-plateforme (fonctionne sur Linux, MacOS et Windows).</li><li>Détecte les erreurs du flash de votre périphérique.</li></ul><h4>Inconvénients:</h4><ul class=\"disc-list\"><li>Nécessite une installation.</li><li>Plus lent que <code>dd</code>.</li></ul><br><h3>Méthode 3 : Ventoy (Outil USB Multi-ISO)</h3><p><a href=\"https://www.ventoy.net/en/index.html\">Ventoy</a> est un outil puissant qui permet de créer une clé USB bootable avec plusieurs systèmes d'exploitation.<br>Au lieu d'écrire directement une ISO sur la clé USB, Ventoy installe un chargeur de démarrage sur la clé.<br>Vous pouvez ensuite faire glisser et déposer autant de fichiers ISO que vous le souhaitez sur le périphérique et choisir celui à partir duquel démarrer lors de l'allumage de votre ordinateur.</p><h4>Étapes:</h4><ul class=\"numbered-list\"><li><b>Téléchargez et installez Ventoy:</b> Allez sur le <a href=\"https://www.ventoy.net/en/index.html\">site de Ventoy</a> et téléchargez la version Linux de Ventoy.</li><li><b>Installez Ventoy sur votre clé USB:</b> Extrayez les fichiers et exécutez la commande suivante pour installer Ventoy sur la clé USB: <pre><code><span>$ sudo ./Ventoy2Disk.sh -i /dev/sdX</span></code></pre></li><li><b>Copiez vos fichiers ISO sur votre clé USB:</b> Il vous suffit de faire glisser et déposer vos fichiers ISO sur la clé USB.</li><li><b>Démarrez sur la clé USB:</b> Quand vous redémarrez; Ventoy affichera un boot menu vous permettant de choisir sur quel ISO démarrer.</li></ul><h4>Avantages:</h4><ul class=\"disc-list\"><li>Permet d'avoir plusieurs fichiers ISO sur une clé USB.</li><li>Pas besoin de reformater la clé USB pour chaque nouveau fichier ISO.</li><li>Peut être utiliser pour tester et lancer plusiers systèmes d'exploitations</li></ul><h4>Inconvénients:</h4><ul class=\"disc-list\"><li>Nécessite une configuration initiale.</li><li>Peut s'avérer excessif si vous avez besoin que d'un seul fichier ISO sur votre clé USB.</li></ul><br><h3>Quelle méthode devez-vous choisir?</h3><p>Chaque méthode à ses propres points forts et le meilleur choix dépend de vos besoins:</p><ul class=\"disc-list\"><li>Utilisez <code>dd</code> si vous préférez une approche en ligne de commande et que vous avez besoin d'une solution rapide.</li><li>Utilisez balenaEtcher si vous voulez un outil graphique facile à utiliser avec une vérification intégrée des erreurs.</li><li>Utilisez Ventoy si vous avez besoin d'avoir plusieurs fichiers ISO sur une clé USB et que vous avez besoin d'une clé USB bootable pouvant servir dans plusieurs cas.</li></ul><h2>Conclusion</h2><p>Créer une clé USB bootable sur Linux peut être fait de plusieurs façons, offrant chacune d'elles ses avantages.<br>Que vous installez un nouveau système d'exploitation, exécutez des outils de récupération ou pour tester, ces trois méthodes vous offrent toutes les options dont vous avez besoin.</p>"
    },
    "brr_article": {
        "about": "À propos",
        "title": "Sauvegarde, Restauration et Récupération",
        "content": "<p>Les données sont l’un des actifs les plus précieux pour les particuliers et les entreprises.<br>Perdre des données critiques en raison de pannes système, de cyberattaques ou de suppressions accidentelles peut avoir de graves conséquences.<br>C’est pourquoi il est essentiel de comprendre les processus de sauvegarde, de restauration et de récupération afin de protéger les données et d’assurer la continuité des activités.<br>Bien que ces termes soient souvent utilisés de manière interchangeable, ils remplissent des fonctions distinctes dans la gestion des données.<br>Dans cet article, vous allez explorer les différences entre ces trois processus et l’importance de chacun d’eux.</p><h2>Sauvegarde : La Première Ligne De Défense</h2><p>La sauvegarde est le processus de création de copies de données afin de les protéger contre la perte ou la corruption.<br>Les sauvegardes garantissent qu'en cas de problème, vous disposez d'une copie accessible de vos données, stockée en toute sécurité.<br><br>Deux exemples de création de sauvegarde sans et avec chiffrement: </p><pre><code><span>$ tar -czvf my_backup_$(date +%F_%H-%M-%S) /home/user/documents</span><br><span>$ tar -czvf - /home/user/documents | gpg --symmetric --cipher-algo AES256 -o my_backup_$(date +%F_%H-%M-%S).tar.gz.gpg</span></code></pre><h2>Restauration : Récupérer les données perdues</h2><p>La restauration est le processus de récupération des données de sauvegarde et de les rendre à nouveau disponibles pour l'utilisation.<br>C'est l'action entreprise lorsque des données ont été perdues, corrompues ou supprimées par accident.<br><br>Si vous voulez déchiffrer et extraire votre sauvegarde précédente, voici comment procéder: </p><pre><code><span>$ gpg --output backup_2025-02-18_15-45-00.tar.gz --decrypt backup_2025-02-18_15-45-00.tar.gz.gpg</span><br><span>$ tar -xzvf backup_2025-02-18_15-45-00.tar.gz</span></code></pre><h2>Récupération : Ramener les systèmes à leur fonctionnement normal</h2><p>La récupération va au-delà de la simple restauration des fichiers ; elle consiste à remettre un système ou un environnement entier en état de fonctionnement après une défaillance majeure, telle qu'une cyberattaque, une panne matérielle ou une catastrophe. <br><br>Supposons que votre système ait planté et que vous disposez d'une sauvegarde complète de votre système appelée <code>full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</code>, située sur un média externe <code>/mnt/backup</code>.<br>Voici comment procéder étape par étape: </p><br><h3>Étape 1 : Démarrer à partir d'un Live CD/USB</h3><p>Vous devez démarrer dans un environnement Linux live, car cela vous permettra de monter votre disque sans qu'il soit utilisé, assurant ainsi une récupération propre sans conflits.<br><a href=\"/blog/create-bootable-usb\"> Voici comment créer un live USB Linux</a></p><br><h3>Étape 2 : Monter les systèmes de fichiers</h3><p>Une fois démarré, vous ouvrez un terminal et montez les partitions du système cible (là où vous voulez récupérer votre sauvegarde).<br>La commande <code>lsblk</code> va vous permettre de trouver le disque où Linux était installé (nous allons supposer que votre système de fichiers racine soit <code>/dev/sda1</code>): </p><pre><code>$ sudo mount /dev/sda1 /mnt</code></pre><p>Si les partitions <code>/home</code> et <code>/boot</code> existent, montez-les également: </p><pre><code><span>$ sudo mkdir -p /mnt/home && sudo mount /dev/sda2 /mnt/home</span><br><span>$ sudo mkdir -p /mnt/boot && sudo mount /dev/sda3 /mnt/boot</span></code></pre><p>Vous devez monter votre Live CD/USB afin de rendre accessible votre fichier de sauvegarde: </p><pre><code><span>$ sudo mount /dev/sdb1 /mnt/backup # Remplacez /dev/sdb1 par la partition correspondante à votre CD/USB.</span></code></pre><br><h3>Étape 3 : Déchiffrer la sauvegarde (si elle est chiffrée)</h3><p>Rappelez-vous, votre sauvegarde se nomme <code>full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</code> et elle est chiffrée.<br>Voici comment la déchiffrer: </p><pre><code><span>$ gpg --output /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz --decrypt /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</span></code></pre><p>Il vous sera demandé de saisir le mot de passe que vous avez utilisé lorsque vous aviez fait votre sauvegarde.</p><h3>Étape 4 : Restaurer la sauvegarde du système</h3><p>Une fois la sauvegarde déchiffrée (ou si elle est déjà au format .tar.gz), vous pouvez la restaurer en utilisant la commande <code>tar</code>.<br>Utilisez <code>tar</code> avec l'option <code>--exclude</code> pour éviter d'écraser vos points de montage actuels tels que <code>/mnt</code>, <code>/proc</code>, <code>/sys</code> ou <code>/dev</code>.<br>Voici comment procéder: </p><pre><code><span>$ sudo tar -xzpf /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz -C /mnt --exclude=/mnt --exclude=/proc --exclude=/sys --exclude=/dev</span></code></pre><h4>Explication:</h4><ul class=\"disc-list\"><li><code>-x</code> - Extraire les fichiers.</li><li><code>-z</code> - Décompresse le fichier <code>.tar.gz</code>.</li><li><code>-p</code> - Préserve les permissions.</li><li><code>-f /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz</code> - Le fichier de sauvegarde à partir duquel restaurer.</li><li><code>-C /mnt</code> - Spécifie le répertoire de destination (ici, la racine de votre système montée sur /mnt)..</li><li><code>--exclude=/mnt --exclude=/proc --exclude=/sys --exclude=/dev</code> - Empêche l'écrasement des répertoires système ou des fichiers spéciaux qui ne doivent pas être restaurés à partir de la sauvegarde.</li></ul><br><h3>Étape 5 : Restaurer le Bootloader (si nécessaire)</h3><p>Si vous avez restauré le système sur un nouveau disque, vous devrez peut-être restaurer le bootloader (GRUB) afin de pouvoir démarrer sur votre système.<br>Voici comment réinstaller GRUB (en supposant que la partition racine soit toujours /dev/sda1): </p><pre><code><span>$ sudo mount --bind /dev /mnt/dev</span><br><span>$ sudo mount --bind /proc /mnt/proc</span><br><span>$ sudo mount --bind /sys /mnt/sys</span><br><span>$ sudo chroot /mnt</span><br><span>$ grub-install /dev/sda # Installe GRUB dans le MBR du disque</span><br><span>$ update-grub # Mets à jour la configuration du bootloader GRUB</span><br><span>$ exit</span></code></pre></p><br><h3>Étape 6 : Redémarrer le système</h3><p>Après avoir récupéré le système et installé le bootloader, vous devriez pouvoir redémarrer sur votre système récupéré.<br>Mais d'abord, vous devez démonter toutes les partitions: </p><pre><code><span>$ sudo umount /mnt/boot /mnt/home /mnt/dev /mnt/proc /mnt/sys /mnt/backup /mnt</span></code></pre><p>Ensuite, vous pouvez éjecter votre Live CD/USB: </p><pre><code><span>$ sudo eject /dev/sdb # Remplacez /dev/sdb par votre périphérique CD/USB correspondant</span></code></pre><p>Maintenant, vous pouvez retirer physiquement votre Live CD/USB et redémarrer le système: </p><pre><code><span>$ sudo reboot</span></code></pre></p><br><h3>Étape 7 : Vérifier la récupération</h3><p>Après avoir redémarré, vous pouvez vérifier si tout a été restauré: </p><pre><code><span>$ ls /home</span><br><span>$ df -h</span></code></pre><p>Félicitations ! Vous avez réussi à récupérer votre système Linux !</p><h2>Conclusion</h2><p>Comprendre les différences entre la sauvegarde, la restauration et la récupération aide les organisations à mettre en place des stratégies efficaces de protection des données.<br>En veillant à ce que les sauvegardes soient fiables, les restaurations testées et les plans de récupération en place, les entreprises peuvent minimiser les temps d'arrêt et la perte de données face à des perturbations inattendues.<br><br>Je me suis lancé le défi de développer un script séparé pour chaque processus.<br>Chaque script est disponible sur mon GitHub et ci-dessous:</p>",
        "final": "<br><p>Votre entreprise dispose-t-elle d'une stratégie solide de sauvegarde, de restauration et de récupération ?<br>Si ce n'est pas le cas, parlons-en d'en mettre une en place !</p>"
    }
}
