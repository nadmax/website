{
    "title": "Backup, Restore and Recovery on Linux",
    "date": "2025-03-17",
    "content": "<p>Data is one of the most valuable assets for individuals and businesses alike.<br>Losing critical data due to system failures, cyberattacks, or accidental deletions can have severe consequences.<br>Thatâ€™s why understanding the processes of backup, restore, and recovery is crucial for safeguarding data and ensuring business continuity.<br>While these terms are often used interchangeably, they serve distinct purposes in data management.<br>In this article, you are going to explore the differences between these three processes and why each one is essential.</p><h2>Backup : The First Line Of Defense</h2><p>Backup is the process of creating copies of data to protect against loss or corruption.<br>Backups ensure that, in the event of an issue, you have an accessible copy of your data stored safely.<br><br>Two examples of how to create a backup without and with encryption:</p><pre><code><span>$ tar -czvf my_backup_$(date +%F_%H-%M-%S) /home/user/documents</span><br><span>$ tar -czvf - /home/user/documents | gpg --symmetric --cipher-algo AES256 -o my_backup_$(date +%F_%H-%M-%S).tar.gz.gpg</span></code></pre><h2>Restore: Bringing Back Lost Data</h2><p>Restoring is the process of retrieving backup data and making it available for use again.<br>It is the action taken when data has been lost, corrupted, or accidentally deleted.<br><br>If you want to decrypt and extract your previous backup, here's how to do it: </p><pre><code><span>$ gpg --output backup_2025-02-18_15-45-00.tar.gz --decrypt backup_2025-02-18_15-45-00.tar.gz.gpg</span><br><span>$ tar -xzvf backup_2025-02-18_15-45-00.tar.gz</span></code></pre><h2>Recovery: Restoring Systems to Normal Operations</h2><p>Recovery goes beyond restoring files; it involves getting an entire system or environment back to operational status after a major failure, such as a cyberattack, hardware failure, or disaster.<br><br> Let's assume your system has crashed, and you have a backup of your entire system called <code>full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</code> located on an external media <code>/mnt/backup</code>.<br>Here's how to do it step by step:</p><br><h3>Step 1 : Boot from Live CD/USB</h3><p>You need to boot into a Linux live environment because it lets you mount your disk without it being in use, ensuring a clean recovery without conflicts.<br><a href=\"/blog/bootable-usb\"> Here's how to create a Linux live USB</a></p><br><h3>Step 2 : Mount the Filesystems</h3><p>Once booted, you open a terminal and you mount the partitions of the target system (where you want to recover the backup to).<br><p>The <code>lsblk</code> command will help you find the disk where Linux was installed (we will assume that your root filesystem is <code>/dev/sda1</code>): </p><pre><code>$ sudo mount /dev/sda1 /mnt</code></pre><p>If <code>/home</code>, <code>/boot</code> partitions exist, mount them too: </p><pre><code><span>$ sudo mkdir -p /mnt/home && sudo mount /dev/sda2 /mnt/home</span><br><span>$ sudo mkdir -p /mnt/boot && sudo mount /dev/sda3 /mnt/boot</span></code></pre><p>You need to mount your Live CD/USB to make accessible your backup file: </p><pre><code><span>$ sudo mount /dev/sdb1 /mnt/backup # Replace /dev/sdb1 with the correct CD/USB partition</span></code></pre><br><h3>Step 3 : Decrypt the Backup (If Encrypted)</h3><p>Remember, in your case, your backup <code>full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</code> is encrypted.<br>Here's how to decrypt it: </p><pre><code><span>$ gpg --output /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz --decrypt /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz.gpg</span></code></pre>You will be prompted for the passphrase used to encrypt the backup.</p><br><h3>Step 4 : Restore the System Backup</h3><p>Once the backup is decrypted (or if it's already in .tar.gz format), you can restore it using <code>tar</code>.<br>Use <code>tar</code> with the <code>--exclude</code> option to avoid overwriting your current mount points like <code>/mnt</code>,<code>/proc</code>,<code>/sys</code>, or <code>/dev</code>.<br>Here's how to do it: </p><pre><code><span>$ sudo tar -xzpf /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz -C /mnt --exclude=/mnt --exclude=/proc --exclude=/sys --exclude=/dev</span></code></pre><h4>Explanation:</h4><ul class=\"disc-list\"><li><code>-x</code> - Extract files.</li><li><code>-z</code> - Uncompress the <code>.tar.gz</code> file.</li><li><code>-p</code> - Preserve permissions.</li><li><code>-f /mnt/backup/full_system_backup_2025-02-18_10-30-25.tar.gz</code> - The backup file to restore from.</li><li><code>-C /mnt</code> - This specifies the target directory (the root of your system, mounted at /mnt).</li><li><code>--exclude=/mnt --exclude=/proc --exclude=/sys --exclude=/dev</code> - Prevents overwriting system directories or special files that should not be restored from the backup.</li></ul><br><h3>Step 5 : Restore Bootloader (if necessary)</h3><p>If you restored the system to a new disk, you may need to restore the bootloader (GRUB) to make the system bootable.<br>Here's how to reinstall GRUB (assuming the root partition is still <code>/dev/sda1</code>): </p><pre><code><span>$ sudo mount --bind /dev /mnt/dev</span><br><span>$ sudo mount --bind /proc /mnt/proc</span><br><span>$ sudo mount --bind /sys /mnt/sys</span><br><span>$ sudo chroot /mnt</span><br><span>$ grub-install /dev/sda # Install GRUB to the MBR of the disk</span><br><span>$ update-grub # Update GRUB's bootloader configuration</span><br><span>$ exit</span></code></pre><br><h3>Step 6 : Reboot the System</h3><p>After recovering the system and installing the bootloader, you should be able to reboot into your recovered system.<br>First, you unmount all the partitions: </p><pre><code><span>$ sudo umount /mnt/boot /mnt/home /mnt/dev /mnt/proc /mnt/sys /mnt/backup /mnt</span></code></pre><p>Then you eject the Live CD/USB: </p><pre><code><span>$ sudo eject /dev/sdb # Replace with the correct CD/USB device</span></code></pre><p>Now, you remove physically the live CD/USB and you reboot the system: </p><pre><code><span>$ sudo reboot</span></code></pre><br><h3>Step 7 : Verify Recovery</h3><p>After rebooting, you can check if everything is restored:</p> <pre><code><span>$ ls /home</span><br><span>$ df -h</span></code></pre><p>Congratulations! You have successfully recovered your Linux system !</p><h2>Conclusion</h2><p>Understanding the distinctions between backup, restore, and recovery helps organizations implement effective data protection strategies.<br>By ensuring that backups are reliable, restores are tested, and recovery plans are in place, businesses can minimize downtime and data loss in the face of unexpected disruptions.</p>",
    "conclusion": "<p>Does your business have a solid backup, restore, and recovery strategy?<br>If not, let's discuss it to implement one !</p>"
}