{
    "title": "How to Create a Bootable USB on Linux?",
    "date": "2025-03-17",
    "content": "<p>A bootable USB is a USB drive that contains an operating system (OS) or utility that you can boot your computer from.<br>This can be used to install an OS, run recovery tools, or try out a Linux distribution without installing it on your computer.<br><br>A Live USB is a subset of a bootable USB where the OS runs directly from the USB without being installed on the computer's hard drive.<br><br>On this article, you are going to explore three different methods for creating a bootable USB on Linux.<br>Each method has its own benefits and use cases, so read on to find the best approach for your needs !</p><br><h3>Method 1 : <code>dd</code> (Command-Line Method)</h3><p><code>dd</code> is a powerful, built-in command-line tool available in most Linux distributions.<br>It can be used to create a bootable USB by copying the ISO file of an operating system directly to the USB drive.<br>While it's quick and efficient, caution is needed, as the <code>dd</code> command can easily overwrite data if the wrong device is selected.</p><h4>Steps:</h4><ul class=\"disc-list\"><li><strong>Identify your USB drive:</strong> Run the following command to list your devices: <pre><code><span>$ lsblk</span></code></pre></li><li><strong>Unmount the USB drive (if necessary):</strong> <pre><code><span>$ sudo umount /dev/sdX1 # Replace /dev/sdX1 with the correct USB partition</span></code></pre></li><li><strong>Run the <code>dd</code> command:</strong> Replace <code>/path/to/your.iso</code> with the path to your ISO and <code>/dev/sdX</code> with the correct device path for your USB: <pre><code><span>$ sudo dd if=/path/to/your.iso of=/dev/sdX bs=4M status=progress oflag=sync</span></code></pre></li><li><strong>Eject the USB drive:</strong> <pre><code><span>$ sudo eject /dev/sdX</span></code></pre></li></ul><h4>Pros:</h4><ul class=\"disc-list\"><li>No additional software required.</li><li>Flexible and fast.</li></ul><h4>Cons:</h4><ul class=\"disc-list\"><li>Risk of overwriting data if the wrong device is selected.</li><li>Command-line only, no graphical interface.</li></ul><br><h3>Method 2 : balenaEtcher (Graphical Interface)</h3><p><a href=\"https://etcher.balena.io/\">balenaEtcher</a> is a popular, easy-to-use tool with a graphical interface.<br>It's perfect for beginners or those who prefer not to use the terminal.<br>balenaEtcher simplifies the process of creating a bootable USB and ensures that the process is safe by verifying the image.</p><h4>Steps:</h4><ul class=\"disc-list\"><li><strong>Download and Install balenaEtcher:</strong> Go to the <a href=\"https://etcher.balena.io/\">balenaEtcher website</a> and download appropriate version for your Linux distribution.</li><li><strong>Launch balenaEtcher:</strong> Open the application after installation.</li><li><strong>Select the ISO file:</strong> Click on the \"Flash from file\" button and choose your ISO file.</li><li><strong>Select your USB drive:</strong> Ensure that the correct USB device is selected.</li><li><strong>Click on \"Flash!\":</strong> balenaEtcher will now create the bootable USB drive.</li></ul><h4>Pros:</h4><ul class=\"disc-list\"><li>User-friendly and visually intuitive.</li><li>Cross-platform (works on Linux, MacOS and Windows).</li><li>Verifies the flash process for errors.</li></ul><h4>Cons:</h4><ul class=\"disc-list\"><li>Requires installation.</li><li>Slower than <code>dd</code>.</li></ul><br><h3>Method 3: Ventoy (Multi-ISO USB Tool)</h3><p><a href=\"https://www.ventoy.net/en/index.html\">Ventoy</a> is a powerfull tool that allows you to create a bootable USB drive with multiple operating systems.<br>Instead of writing an ISO directly to the USB, Ventoy installs a bootloader on the USB.<br>You can then drag and drop as many ISO files as you like onto the drive, and choose which one to boot from when you start up your computer.</p><h4>Steps:</h4><ul class=\"disc-list\"><li><strong>Download and Install Ventoy:</strong> Go to the <a href=\"https://www.ventoy.net/en/index.html\">Ventoy website</a> and download the Linux version of Ventoy.</li><li><strong>Install Ventoy to your USB drive:</strong> Extract the files and run the following command to install Ventoy onto the USB drive: <pre><code><span>$ sudo ./Ventoy2Disk.sh -i /dev/sdX</span></code></pre></li><li><strong>Copy ISO files to the USB drive:</strong> Simply drag and drop your ISO files onto the USB.</li><li><strong>Boot from the USB:</strong> When you reboot, Ventoy will display a boot menu, allowing you to choose which ISO to boot.</li></ul><h4>Pros:</h4><ul class=\"disc-list\"><li>Allows multiple ISOs on one USB drive.</li><li>No need to reformat the USB for each new ISO.</li><li>Can be used for testing or running multiple OSes.</li></ul><h4>Cons:</h4><ul class=\"disc-list\"><li>Requires some initial setup.</li><li>May be overkill if you only need a single OS on the USB.</li></ul><br><h3>Which Method Should You Choose?</h3><p>Each method has its own strengths, and the best choice depends on your needs:</p><ul class=\"disc-list\"><li>Use <code>dd</code> if you prefer a command-line approach and need a fast, no-frills solution.</li><li>Use balenaEtcher if you want an easy-to-use graphical tool with built-in error checking.</li><li>Use Ventoy if you want the flexibility to have multiple ISOs on a single USB and need a bootable USB that can serve multiple purposes.</li></ul><h2>Conclusion</h2><p>Creating a bootable USB on Linux can be done in several ways, each offering its own set of advantages.<br>Whether youâ€™re installing a new OS, running recovery tools, or testing out a distro, these three methods provide you with all the options you need.</p>"
}